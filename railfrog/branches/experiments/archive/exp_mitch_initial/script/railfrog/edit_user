#!/usr/bin/env ruby

print 'Loading railfrog system...'
require 'config/environment'
puts 'Done'

print "\n"
puts "=== EDIT USER ==="
print 'Login: '
login_name = $stdin.gets.chomp

if (user = User.find_by_login(login_name)).nil?
  print "\n"
  puts "ERROR: User with that login doesn't exist."
  exit
end

print 'New Login, or leave blank to keep the same: '
new_login_name = $stdin.gets.chomp

unless new_login_name.empty?
  unless User.find_by_login(new_login_name).nil?
    print "\n"
    puts "ERROR: User with that login already exists."
    exit
  end
end

print 'New Password, or leave blank to keep the same: '
new_password_val = $stdin.gets.chomp

unless new_password_val.empty?
  print 'Confirm Password: '
  unless $stdin.gets.chomp == new_password_val
    print "\n"
    puts "ERROR: Passwords did not match."
    exit
  end
end

print 'Roles, more than one separated by a comma, or leave blank to keep the same roles: '
role_names = $stdin.gets.chomp

unless role_names.empty?
  roles = Role.find(:all)
  
  roles_to_add = []
  role_names.each do |role_name|
    role = roles.detect { |role| role.name == role_name or role.translate == role_name }
    
    if role.nil?
      print "\n"
      puts "ERROR: Couldn't find a role named '#{role_name}'"
      exit
    end
    
    roles_to_add.push(role)
  end
  
  roles_to_add.each do |role|
    user.add_role(role)
  end
end

user.login = new_login_name unless new_login_name.empty?
user.password = new_password_val unless new_password_val.empty?
user.save! unless new_login_name.empty? and new_password_val.empty?

print "\n"
puts "User edited."