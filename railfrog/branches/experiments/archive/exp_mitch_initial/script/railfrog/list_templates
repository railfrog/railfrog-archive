#!/usr/bin/env ruby

print 'Loading railfrog system...'
require 'config/environment'
puts 'Done'

print "\n"
puts '=== LIST TEMPLATES OF A THEME IN RAILFROG ==='
if ARGV.empty?
  print 'Theme name: '
  theme_name = $stdin.gets.chomp
else
  theme_name = ARGV[0].to_s
end

puts "Attempting to list templates of '#{theme_name}'..."

the_theme = nil
Dir.foreach(Theme::get_path) do |theme|
  next unless theme == theme_name
  next unless File.exists?(Theme::get_path + '/' + theme + '/theme.yml')
  
  yaml = YAML::load(File.open(Theme::get_path + '/' + theme + '/theme.yml', 'r'))
  yaml['id'] = theme
  yaml['active'] = Theme::current == theme
  the_theme = yaml
end

if the_theme.nil?
  print "\n"
  puts "ERROR: Theme with that name doesn't exist!"
  exit
end

templates = []
Dir.foreach(Theme::get_path + '/' + theme_name + '/templates') do |template|
  next unless template =~ /^(.+?).rhtml$/
  templates.push($1)
end

templates.sort!

print "\n"
puts 'Name'.ljust(15)
templates.each { |template| puts '> ' + template.ljust(15) }