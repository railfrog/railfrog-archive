#!/usr/bin/env ruby

print 'Loading railfrog system...'
require 'config/environment'
puts 'Done'

print "\n"
puts '=== CREATE A TEMPLATE FOR A THEME IN RAILFROG ==='
print 'Theme name: '
theme_name = $stdin.gets.chomp

the_theme = nil
Dir.foreach(Theme::get_path) do |theme|
  next unless theme == theme_name
  next unless File.exists?(Theme::get_path + '/' + theme + '/theme.yml')
  
  yaml = YAML::load(File.open(Theme::get_path + '/' + theme + '/theme.yml', 'r'))
  yaml['id'] = theme
  yaml['active'] = Theme::current == theme
  the_theme = yaml
end

if the_theme.nil?
  print "\n"
  puts "ERROR: Theme with that name doesn't exist!"
  exit
end

print 'Template name (without the .rhtml extension): '
template_name = $stdin.gets.chomp

template_path = Theme::get_path + '/' + theme_name + '/templates/' + template_name + '.rhtml'
if File.exists?(template_path)
  print "\n"
  puts "ERROR: Template with that name already exists!"
  exit
end

print 'Path to file containing template contents: '
source_path = $stdin.gets.chomp

unless File.exists?(source_path)
  print "\n"
  puts "ERROR: The source file for the template contents does not exist."
  exit
end

File.open(source_path, 'r') do |source_fh|
  unless source_fh.stat.readable?
    print "\n"
    puts "ERROR: The source file for the template contents is not readable."
    exit
  end
  
  File.open(template_path, 'w+') do |fh|
    unless fh.stat.writable?
      print "\n"
      puts "ERROR: Template is not writable!"
      exit
    end
    
    fh.write(source_fh.read)
  end
end

print "\n"
puts "#{template_name} created for #{theme_name}."