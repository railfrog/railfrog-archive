#!/usr/bin/env ruby

print 'Loading railfrog system...'
require 'config/environment'
puts 'Done'

print "\n"
puts '=== EDIT AN ITEM IN RAILFROG ==='
if ARGV.empty?
  print 'Item name: '
  item_name = $stdin.gets.chomp
else
  item_name = ARGV[0].to_s
end

if (item = Item.find_by_name(item_name, :include => [:extension, :item_extensions])).nil?
  print "\n"
  puts "ERROR: Item named '#{item_name}' doesn't exist!"
  exit
end

print 'Content Extension(s), more than one separated by a comma, or leave blank to keep the same: '
content_extensions = $stdin.gets.chomp

unless content_extensions.empty?
  content_extensions_add = []
  content_extensions.each do |content_extension|
    unless Extension.exists?(content_extension)
      print "\n"
      puts "Error: #{content_extension} doesn't exist or isn't installed!"
      puts "If it's not installed, run the install_extension script to install it."
      exit
    end
    
    content_extensions_add.push(Extension.find_by_name(content_extension))
  end
  
  item.item_extensions.each { |ext| item.unset_content_extension(ext.extension) }
  content_extensions_add.each { |ext| item.set_content_extension(ext) }
  item = Item.find_by_name(item_name, :include => [:extension, :item_extensions])
end

begin
  exit unless item.extension.ext_cmd_edit(item.extension, item)
rescue NoMethodError
  print "\n"
  puts "Error: The #{item.extension.name} extension is not enabled for editing directly from the command line."
  exit
end

print "\n"
puts 'Item saved!'