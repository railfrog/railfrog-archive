= Railfrog =

Railfrog is a lightweight Content Management System for building websites. 

== Installation ==
 1. Create a {{{railfrog_development}}} database (see notes below).
 2. Copy config/database.yml.example to database.yml and edit as appropriate.
 3. Run {{{$ rake migrate}}} to create all required tables in the database.
 4. Run WEBrick

== Loading site content ==

To load the Railfrog default site, use:
{{{$ rake railfrog:site:load SITE=db/sites/railfrog}}}

Note: if you'd like to load site content of your own to the Railfrog database use 
{{{$ rake railfrog:site:load SITE=<path-to-your-site>}}}

== Starting Railfrog ==

Open your browser at http://localhost:3000 and you should see the familiar Railfrog site.

To access the administration interface, point your browser to http://localhost:3000/admin 
and there you can login with user email of {{{test@test.com}}} and password {{{test}}}. 

== Troubleshooting ==

 If your database gets mashed, try
 {{{$ rake migrate VERSION=0 && rake migrate}}}

== Notes on Database Setup ==

=== MySQL ===
 * Create databases with UTF-8 as default charset:
    > CREATE DATABASE railfrog_development DEFAULT CHARACTER SET "utf8";
    > CREATE DATABASE railfrog_test DEFAULT CHARACTER SET "utf8";
    > CREATE DATABASE railfrog_production DEFAULT CHARACTER SET "utf8";

=== PostgreSQL ===
 * edit /var/lib/postgresql/data/pg_hba.conf to add a suitable auth rule
 * use createuser / createdb to create dbs -- or:
    psql -U postgres template1
    > create database railfrog_development with encoding = 'utf8';
    > create database railfrog_test with encoding = 'utf8';
    > create database railfrog_production with encoding = 'utf8';
    > create user railfrog with password 'ribbet!';


== Notes for developers ==

 * You have to install the rspec gem (gem install rspec) 
   and the rspec_on_rails plugin (script/plugin install ...) to run the specs